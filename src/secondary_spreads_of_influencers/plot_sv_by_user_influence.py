#!/usr/bin/env python3


import argparse
import polars as pl
from scipy.stats import kruskal
import scikit_posthocs as sp
import matplotlib as mpl
mpl.use("WebAgg")
mpl.rc("webagg", port=8899, port_retries=10, open_in_browser=False)
import matplotlib.pyplot as plt
import seaborn as sns
import scienceplots


arg_parser = argparse.ArgumentParser()
arg_parser.add_argument("--user_influence_score_path", type=str, required=True)
arg_parser.add_argument("--strctural_viralities_by_first_reposter_path", type=str, required=True)
arg_parser.add_argument("--influence_column_name", type=str, default="hg-index")
arg_parser.add_argument("--output_path", type=str, required=True)


# [File Summary]
# This script plots the structural virality by the user influence score.
# [Configs]
# influence_column_name:
#   The column name of the user influence score.
# [Inputs]
# user_influence_score_path:
#   Path to the user influence score.
#   This file is generated by compute_h_index.py or compute_centrality_from_retweets.py.

def main(args):
    df_ui = pl.read_parquet(args.user_influence_score_path)
    df_ui = df_ui.with_columns(
        pl.col(args.influence_column_name).rank("min").alias("rank"))
    df_ui = df_ui.with_columns(
        ((pl.col("rank") / pl.col("rank").max())).alias("influence_score"))
    df_ui = df_ui.with_columns(
        pl.col(args.influence_column_name).qcut(
            [0.5, 0.7, 0.9, 0.95, 0.99],
            labels=["low", "low-mid", "mid", "high-mid", "high", "very-high"],
            allow_duplicates=True,
        ).alias("influence_score_group"))

    df_sv = pl.read_parquet(args.strctural_viralities_by_first_reposter_path)

    df_sv = df_sv.join(
        df_ui,
        left_on="root_user_id",
        right_on="user_id",
        how="inner"
    )

    df_sv = df_sv.with_columns(
        pl.col("structural_virality").log().alias("log_structural_virality")
    )

    df_sv.group_by("influence_score_group").agg(
        pl.col("structural_virality").mean().alias("Structural Virality"),
        pl.col("max_depth").mean().alias("Max Depth"),
    ).sort("influence_score_group", descending=True).write_excel(args.output_path)

    print("Structural Virality")
    kruskal_res = kruskal(
        df_sv.filter(pl.col("influence_score_group") == "low")["structural_virality"].to_numpy(),
        df_sv.filter(pl.col("influence_score_group") == "low-mid")["structural_virality"].to_numpy(),
        df_sv.filter(pl.col("influence_score_group") == "mid")["structural_virality"].to_numpy(),
        df_sv.filter(pl.col("influence_score_group") == "high-mid")["structural_virality"].to_numpy(),
        df_sv.filter(pl.col("influence_score_group") == "high")["structural_virality"].to_numpy(),
        df_sv.filter(pl.col("influence_score_group") == "very-high")["structural_virality"].to_numpy()
    )
    print(kruskal_res)

    if kruskal_res.pvalue < 0.05:
        dunn = sp.posthoc_dunn(
            a=df_sv.to_pandas(),
            val_col="structural_virality",
            group_col="influence_score_group",
        )
        print(dunn)

    # max depth
    print("Max Depth")
    kruskal_res = kruskal(
        df_sv.filter(pl.col("influence_score_group") == "low")["max_depth"].to_numpy(),
        df_sv.filter(pl.col("influence_score_group") == "low-mid")["max_depth"].to_numpy(),
        df_sv.filter(pl.col("influence_score_group") == "mid")["max_depth"].to_numpy(),
        df_sv.filter(pl.col("influence_score_group") == "high-mid")["max_depth"].to_numpy(),
        df_sv.filter(pl.col("influence_score_group") == "high")["max_depth"].to_numpy(),
        df_sv.filter(pl.col("influence_score_group") == "very-high")["max_depth"].to_numpy()
    )
    print(kruskal_res)

    if kruskal_res.pvalue < 0.05:
        dunn = sp.posthoc_dunn(
            a=df_sv.to_pandas(),
            val_col="max_depth",
            group_col="influence_score_group",
        )
        print(dunn)

    plt.rcParams["font.size"] = 18
    plt.style.use(["science", "nature"])

    fig, ax = plt.subplots(1, 2, figsize=(14, 6))
    sns.pointplot(
        data=df_sv.to_pandas(),
        x="influence_score_group",
        y="structural_virality",
        hue="influence_score_group",
        linestyle="none",
        errorbar="ci",
        marker="_",
        markersize=20,
        markeredgewidth=3,
        ax=ax[0],
        palette=sns.diverging_palette(220, 20),
    )
    ax[0].set_xlabel("User Influence", fontsize=16)
    ax[0].set_ylabel("Structural Virality", fontsize=16)
    ax[0].tick_params(labelsize=12)
    ax[0].set_ylim(0, 1.5)

    sns.pointplot(
        data=df_sv.to_pandas(),
        x="influence_score_group",
        y="max_depth",
        hue="influence_score_group",
        linestyle="none",
        errorbar="ci",
        marker="_",
        markersize=20,
        markeredgewidth=3,
        ax=ax[1],
        palette=sns.diverging_palette(220, 20),
    )
    ax[1].set_xlabel("User Influence", fontsize=16)
    ax[1].set_ylabel("Max Depth", fontsize=16)
    ax[1].tick_params(labelsize=12)
    ax[1].set_ylim(0, 1.5)

    plt.show()


if __name__ == "__main__":
    args = arg_parser.parse_args()
    main(args)
